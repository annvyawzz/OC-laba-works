Тема: «Синхронизация потоков и управление ресурсами».
Общее задание:
Синхронизация потоков при помощи критических секций и событий.
Разрешение ресурсных конфликтов.
Задача: Написать программу, моделирующую работу нескольких
потоков-исполнителей (marker), которые конкурируют за общий ресурс
(массив), под управлением главного потока (main).
Часть 1
Роль потока main (Управляющий поток):
1. Создать и инициализировать нулями общий массив целых чисел (размер
вводится с консоли).
2. Запросить у пользователя количество потоков marker, которые нужно
создать.
3. Создать необходимые для синхронизации объекты:
a. Критическую секцию для защиты доступа к общему массиву.
b. Массив событий, которые потоки marker будут использовать, чтобы
сообщить main о невозможности продолжать работу.
c. Массив событий для сигнализации потокам marker о
необходимости завершиться.
d. Событие для одновременного запуска всех потоков marker.
4. Запустить N потоков marker. Каждому потоку передать его порядковый
номер, размер массива и необходимые объекты синхронизации.
5. Дать общий сигнал на начало работы всем потокам marker.
6. Войти в главный управляющий цикл:
a. Ждать, пока все активные потоки marker не сообщат о невозможности
продолжать работу (используя массив событий).
b. Вывести на консоль текущее состояние массива.
c. Запросить у пользователя номер потока marker, который следует
завершить
d. Подать сигнал на завершение выбранному потоку.
e. Дождаться, пока этот поток действительно завершится.
f. Вывести на консоль состояние массива после того, как завершенный поток
очистил свои отметки.
g. Подать сигнал на продолжение работы всем оставшимся потокам marker.
Когда все потоки marker будут завершены, освободить все ресурсы и
завершить программу
